# =============================================================================
# ENVIRONMENT VARIABLES FOR TRANSFORMER MANAGEMENT SYSTEM BACKEND
# =============================================================================
# This file contains default values for local development.
# For production deployment, override these values with secure configurations.
# Never commit sensitive production values to version control.

# Application Configuration
APP_NAME=transformer-management-system

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Database Connection URL
# Local: jdbc:mysql://localhost:3306/transformer_db
# Docker: jdbc:mysql://mysql-db:3306/transformer_db
DB_URL=jdbc:mysql://localhost:3306/react_test_db

# Database Credentials
DB_USERNAME=root
DB_PASSWORD='Water123'

# Database Driver
DB_DRIVER=com.mysql.cj.jdbc.Driver

# Hibernate DDL Mode
# Options: create, create-drop, update, validate, none
# Development: update, Production: validate or none
DB_DDL_AUTO=update

# =============================================================================
# MYSQL DOCKER CONFIGURATION (for docker-compose)
# =============================================================================
MYSQL_ROOT_PASSWORD='Water123'
MYSQL_DATABASE=react_test_db
MYSQL_USER=root
MYSQL_PASSWORD='Water123'

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
# Server Port
SERVER_PORT=8080

# Application Context Path (default is root /)
SERVER_SERVLET_CONTEXT_PATH=/

# Spring Profile
# Options: default, docker, prod
SPRING_PROFILES_ACTIVE=default

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================
# File Upload Directory
# Local: ./uploads/images/
# Docker: /app/uploads/images/
FILE_UPLOAD_DIR=./uploads/images/

# File Upload Settings
FILE_UPLOAD_ENABLED=true
FILE_MAX_SIZE=10MB
FILE_MAX_REQUEST_SIZE=10MB
FILE_MAX_FILE_SIZE=10485760

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
# Allowed Origins (comma-separated)
# Development: http://localhost:3000
# Production: https://yourdomain.com,https://www.yourdomain.com
CORS_ALLOWED_ORIGINS=http://localhost:3000

# =============================================================================
# JPA/HIBERNATE CONFIGURATION
# =============================================================================
# Show SQL queries in logs (for debugging)
JPA_SHOW_SQL=true
JPA_FORMAT_SQL=true
JPA_DIALECT=org.hibernate.dialect.MySQLDialect
JPA_DATABASE_PLATFORM=org.hibernate.dialect.MySQLDialect

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Logging Levels: TRACE, DEBUG, INFO, WARN, ERROR
# Development: DEBUG, Production: INFO or WARN
LOGGING_LEVEL_ROOT=INFO
LOGGING_LEVEL_COM_EXAMPLE=INFO
LOGGING_HIBERNATE_SQL=WARN
LOGGING_HIBERNATE_BINDER=WARN

# =============================================================================
# PRODUCTION DEPLOYMENT NOTES
# =============================================================================
# For production deployment:
# 1. Set strong passwords for DB_PASSWORD and MYSQL_PASSWORD
# 2. Use proper domain names in CORS_ALLOWED_ORIGINS
# 3. Set LOGGING_LEVEL_ROOT to INFO or WARN
# 4. Consider using DB_DDL_AUTO=validate or none
# 5. Use secure database connection URLs
# 6. Set SPRING_PROFILES_ACTIVE=prod


# jdbc:postgresql://ep-raspy-mud-af0restu-pooler.c-2.us-west-2.aws.neon.tech/neondb?user=neondb_owner&password=npg_j53TxgHCXyZw&sslmode=require&channelBinding=require

# DB_URL=jdbc:postgresql://ep-raspy-mud-af0restu-pooler.c-2.us-west-2.aws.neon.tech/neondb
# DB_USERNAME=neondb_owner
# DB_PASSWORD=npg_j53TxgHCXyZw